/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/login": {
    /** Retrive token for bearer authentication */
    post: {
      parameters: {
        body: {
          /** Login Request */
          body: definitions["handlers.PostAuthRequest"];
        };
      };
      responses: {
        /** Token Response */
        200: {
          schema: definitions["handlers.PostAuthResponse"];
        };
        /** Bad Request */
        400: {
          schema: definitions["handlers.ApiError"];
        };
        /** Unauthorized */
        401: {
          schema: definitions["handlers.ApiError"];
        };
      };
    };
  };
  "/organization": {
    /** Create a new organization */
    post: {
      parameters: {
        body: {
          /** Create Organization Request */
          body: definitions["handlers.PostOrganizationRequest"];
        };
      };
      responses: {
        /** Organization */
        200: {
          schema: definitions["data.Organization"];
        };
        /** Bad Request */
        400: {
          schema: definitions["handlers.ApiError"];
        };
      };
    };
  };
  "/organization/{id}": {
    /** Get organization by ID */
    get: {
      parameters: {
        path: {
          /** Organization ID */
          id: string;
        };
      };
      responses: {
        /** Organization */
        200: {
          schema: definitions["data.Organization"];
        };
        /** Bad Request */
        400: {
          schema: definitions["handlers.ApiError"];
        };
      };
    };
    /** Patch organization by ID */
    patch: {
      parameters: {
        path: {
          /** Organization ID */
          id: string;
        };
        body: {
          /** Patch Organization Request */
          body: definitions["handlers.PatchOrganizationRequest"];
        };
      };
      responses: {
        /** Organization */
        200: {
          schema: definitions["data.Organization"];
        };
        /** Bad Request */
        400: {
          schema: definitions["handlers.ApiError"];
        };
      };
    };
  };
  "/user": {
    /** Create a new user */
    post: {
      parameters: {
        body: {
          /** Create User Request */
          body: definitions["handlers.PostUserRequest"];
        };
      };
      responses: {
        /** User */
        200: {
          schema: definitions["data.User"];
        };
        /** Bad Request */
        400: {
          schema: definitions["handlers.ApiError"];
        };
      };
    };
  };
  "/user/me": {
    /** Get user by apiKey */
    get: {
      responses: {
        /** User */
        200: {
          schema: definitions["data.User"];
        };
        /** Bad Request */
        400: {
          schema: definitions["handlers.ApiError"];
        };
      };
    };
    /** Patch user by apiKey */
    patch: {
      parameters: {
        body: {
          /** Patch User Request */
          body: definitions["handlers.PatchUserRequest"];
        };
      };
      responses: {
        /** User */
        200: {
          schema: definitions["data.User"];
        };
        /** Bad Request */
        400: {
          schema: definitions["handlers.ApiError"];
        };
      };
    };
  };
}

export interface definitions {
  "data.Organization": {
    address?: string;
    contact_info?: string;
    created_at?: string;
    id?: string;
    name?: string;
    organization_type?: definitions["data.OrganizationType"];
    unique_url?: string;
    updated_at?: string;
  };
  /** @enum {string} */
  "data.OrganizationType": "Airline" | "Carrier" | "Warehouse";
  "data.User": {
    created_at?: string;
    email?: string;
    id?: string;
    updated_at?: string;
    user_name?: string;
  };
  "handlers.ApiError": {
    error?: string;
    status?: number;
  };
  "handlers.PatchOrganizationRequest": { [key: string]: unknown };
  "handlers.PatchUserRequest": {
    password?: string;
    user_name?: string;
  };
  "handlers.PostAuthRequest": {
    email?: string;
    password?: string;
  };
  "handlers.PostAuthResponse": {
    token?: string;
  };
  "handlers.PostOrganizationRequest": {
    address?: string;
    contact_info?: string;
    name?: string;
    organization_type?: definitions["data.OrganizationType"];
  };
  "handlers.PostUserRequest": {
    email?: string;
    password?: string;
  };
}

export interface operations {}

export interface external {}

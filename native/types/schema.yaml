openapi: 3.0.0
info:
    contact: {}
    description: API for the ULD Management System
    title: Rest API
    version: '1.0'
paths:
    /login:
        post:
            description: Retrive token for bearer authentication
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/handlers.PostAuthRequest'
                description: Login Request
                required: true
            responses:
                '200':
                    description: Token Response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/handlers.PostAuthResponse'
                '400':
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/handlers.ApiError'
                '401':
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/handlers.ApiError'
            summary: Retrive token for bearer authentication
            tags:
                - Auth
    /organization:
        post:
            description: Create a new organization
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/handlers.PostOrganizationRequest'
                description: Create Organization Request
                required: true
            responses:
                '200':
                    description: Organization
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/data.Organization'
                '400':
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/handlers.ApiError'
            summary: Create a new organization
            tags:
                - Organization
    '/organization/{id}':
        get:
            description: Get organization by ID
            parameters:
                - description: Organization ID
                  in: path
                  name: id
                  required: true
                  schema:
                      type: string
            responses:
                '200':
                    description: Organization
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/data.Organization'
                '400':
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/handlers.ApiError'
            security:
                - ApiKeyAuth: []
            summary: Get organization by ID
            tags:
                - Organization
        patch:
            description: Patch organization by ID
            parameters:
                - description: Organization ID
                  in: path
                  name: id
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/handlers.PatchOrganizationRequest'
                description: Patch Organization Request
                required: true
            responses:
                '200':
                    description: Organization
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/data.Organization'
                '400':
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/handlers.ApiError'
            security:
                - ApiKeyAuth: []
            summary: Patch organization by ID
            tags:
                - Organization
    /user:
        post:
            description: Create a new user
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/handlers.PostUserRequest'
                description: Create User Request
                required: true
            responses:
                '200':
                    description: User
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/data.User'
                '400':
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/handlers.ApiError'
            summary: Create a new user
            tags:
                - User
    /user/me:
        get:
            description: Get user by apiKey
            responses:
                '200':
                    description: User
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/data.User'
                '400':
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/handlers.ApiError'
            security:
                - ApiKeyAuth: []
            summary: Get user by apiKey
            tags:
                - User
        patch:
            description: Patch user by apiKey
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/handlers.PatchUserRequest'
                description: Patch User Request
                required: true
            responses:
                '200':
                    description: User
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/data.User'
                '400':
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/handlers.ApiError'
            security:
                - ApiKeyAuth: []
            summary: Patch user by apiKey
            tags:
                - User
servers:
    - url: /
components:
    securitySchemes:
        Bearer_Authentication:
            description: A valid JWT token with Bearer prefix
            in: header
            name: Authorization
            type: apiKey
    schemas:
        data.Organization:
            properties:
                address:
                    type: string
                contact_info:
                    type: string
                created_at:
                    type: string
                id:
                    type: string
                name:
                    type: string
                organization_type:
                    $ref: '#/components/schemas/data.OrganizationType'
                unique_url:
                    type: string
                updated_at:
                    type: string
            type: object
        data.OrganizationType:
            enum:
                - Airline
                - Carrier
                - Warehouse
            type: string
            x-enum-varnames:
                - Airline
                - Carrier
                - Warehouse
        data.User:
            properties:
                created_at:
                    type: string
                email:
                    type: string
                id:
                    type: string
                updated_at:
                    type: string
                user_name:
                    type: string
            type: object
        handlers.ApiError:
            properties:
                error:
                    type: string
                status:
                    type: integer
            type: object
        handlers.PatchOrganizationRequest:
            type: object
        handlers.PatchUserRequest:
            properties:
                password:
                    type: string
                user_name:
                    type: string
            type: object
        handlers.PostAuthRequest:
            properties:
                email:
                    type: string
                password:
                    type: string
            type: object
        handlers.PostAuthResponse:
            properties:
                token:
                    type: string
            type: object
        handlers.PostOrganizationRequest:
            properties:
                address:
                    type: string
                contact_info:
                    type: string
                name:
                    type: string
                organization_type:
                    $ref: '#/components/schemas/data.OrganizationType'
            type: object
        handlers.PostUserRequest:
            properties:
                email:
                    type: string
                password:
                    type: string
            type: object

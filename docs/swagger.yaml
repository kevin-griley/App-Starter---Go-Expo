basePath: /
definitions:
  data.Organization:
    properties:
      address:
        type: string
      contact_info:
        type: string
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      organization_type:
        $ref: '#/definitions/data.OrganizationType'
      unique_url:
        type: string
      updated_at:
        type: string
    type: object
  data.OrganizationType:
    enum:
    - Airline
    - Carrier
    - Warehouse
    type: string
    x-enum-varnames:
    - Airline
    - Carrier
    - Warehouse
  data.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      updated_at:
        type: string
      user_name:
        type: string
    type: object
  handlers.ApiError:
    properties:
      error:
        type: string
      status:
        type: integer
    type: object
  handlers.PatchOrganizationRequest:
    type: object
  handlers.PatchUserRequest:
    properties:
      password:
        type: string
      user_name:
        type: string
    type: object
  handlers.PostAuthRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  handlers.PostAuthResponse:
    properties:
      token:
        type: string
    type: object
  handlers.PostOrganizationRequest:
    properties:
      address:
        type: string
      contact_info:
        type: string
      name:
        type: string
      organization_type:
        $ref: '#/definitions/data.OrganizationType'
    type: object
  handlers.PostUserRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
info:
  contact: {}
  description: API for the ULD Management System
  title: Rest API
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Retrive token for bearer authentication
      parameters:
      - description: Login Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.PostAuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Token Response
          schema:
            $ref: '#/definitions/handlers.PostAuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ApiError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ApiError'
      summary: Retrive token for bearer authentication
      tags:
      - Auth
  /logout:
    delete:
      consumes:
      - application/json
      description: Removes HttpOnly cookie from client
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Removes HttpOnly cookie from client
      tags:
      - Auth
  /organization:
    post:
      consumes:
      - application/json
      description: Create a new organization
      parameters:
      - description: Create Organization Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.PostOrganizationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Organization
          schema:
            $ref: '#/definitions/data.Organization'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ApiError'
      summary: Create a new organization
      tags:
      - Organization
  /organization/{id}:
    get:
      consumes:
      - application/json
      description: Get organization by ID
      parameters:
      - description: Organization ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Organization
          schema:
            $ref: '#/definitions/data.Organization'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ApiError'
      security:
      - ApiKeyAuth: []
      summary: Get organization by ID
      tags:
      - Organization
    patch:
      consumes:
      - application/json
      description: Patch organization by ID
      parameters:
      - description: Organization ID
        in: path
        name: id
        required: true
        type: string
      - description: Patch Organization Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.PatchOrganizationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Organization
          schema:
            $ref: '#/definitions/data.Organization'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ApiError'
      security:
      - ApiKeyAuth: []
      summary: Patch organization by ID
      tags:
      - Organization
  /user:
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: Create User Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.PostUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User
          schema:
            $ref: '#/definitions/data.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ApiError'
      summary: Create a new user
      tags:
      - User
  /user/me:
    get:
      consumes:
      - application/json
      description: Get user by apiKey
      produces:
      - application/json
      responses:
        "200":
          description: User
          schema:
            $ref: '#/definitions/data.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ApiError'
      security:
      - ApiKeyAuth: []
      summary: Get user by apiKey
      tags:
      - User
    patch:
      consumes:
      - application/json
      description: Patch user by apiKey
      parameters:
      - description: Patch User Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.PatchUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User
          schema:
            $ref: '#/definitions/data.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ApiError'
      security:
      - ApiKeyAuth: []
      summary: Patch user by apiKey
      tags:
      - User
securityDefinitions:
  Bearer Authentication:
    description: A valid JWT token with Bearer prefix
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
